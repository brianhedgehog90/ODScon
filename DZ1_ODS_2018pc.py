import numpy as np
import pandas as pd

df = pd.read_csv('../../data/mlbootcamp5_train.csv', sep=';', index_col='id')

print(" ======================= Вопрос 1 ============================================")
# Сколько мужчин и женщин представлено в этом наборе данных?
# Ответ: "45530 женщин и 24470 мужчин"

m1 = df[df['gender'] == 1].height.mean()                # Средний рост подгруппы 1 признака gender
m2 = df[df['gender'] == 2].height.mean()                # Средний рост подгруппы 2 признака gender

if m1 > m2:
    # В данном случае 1 - соответствует мужчинам, 2 - женщинам
    all_m  = df.gender.value_counts()[1]
    all_w  = df.gender.value_counts()[2]
    print(all_m, "мужчин и", all_w, "женщин")
else:
    # В противном случае 1 - соответствует женщинам, 2 - мужчинам")
    all_m = df.gender.value_counts()[2]
    all_w = df.gender.value_counts()[1]
    print(all_w, "женщин и", all_m, "мужчин")


print(" ======================= Вопрос 2 ============================================")
# Кто в среднем реже указывает, что употребляет алкоголь – мужчины или женщины?
# Ответ: "Женщины".

# Решаем с учетом информации из 1-го задания:
# женщинам соответствует индекс 1, мужчинам - 2

m_w = df[df['gender'] == 1].alco.mean()                 # число женщин с показателем alco
m_m = df[df['gender'] == 2].alco.mean()                 # число мужчин с показателем alco

if m_w > m_m:
    # Мужчины сообщают реже об употреблении алкоголя
    print("Мужчины")
else:
    # Женщины сообщают реже об употреблении алкоголя
    print("Женщины")


print(" ======================= Вопрос 3 ============================================")
# Во сколько раз процент курящих среди мужчин больше, чем процент курящих среди женщин?
# Ответ: "В 12 раз"

smw = df[(df['gender'] == 1) & (df['smoke'] == 1)]['smoke'].count()  # число курящих женщин
smm = df[(df['gender'] == 2) & (df['smoke'] == 1)]['smoke'].count()  # число курящих мужчин

# Воспользуемся переменными all_m и all_w из задания 1, т.е. мы знаем общее число мужчин и женщин

smoke_ratio = (smm*100/all_m)/(smw*100/all_w)
# Процент курящих среди мужчин больше, чем процент курящих среди женщин в 12 раз
print(int(round(smoke_ratio)))


print(" ======================= Вопрос 4 ============================================")
# На сколько месяцев (примерно) отличаются медианные значения возраста курящих и некурящих.
# Ответ: "На 20 месяцев"

ms = df[(df['smoke'] == 1)]['age'].median()                 # медианный возраст курящих
mns = df[(df['smoke'] == 0)]['age'].median()                # медианный возраст некурящих

delta = (mns - ms)/30                                       # разница в месяцах

# Медианные значения возраста курящих и некурящих отличаются на 20 месяцев
print(int(round(delta)))


print(" ======================= Вопрос 5 ============================================")
# Во сколько раз (округленно, round) отличаются доли больных людей
# согласно целевому признаку, cardio) в двух подвыборках?
# Ответ: "В 3 раза"

df['age_years'] = df['age']/365

df_chol1 = df.query('gender == 2 & smoke == 1 & age_years >= 60 & age_years <= 64 & ap_hi <120 & cholesterol == 1').count()
n_chol1 = df_chol1[(df_chol1.cardio == 1)]                  # Доля больных в первой выборке

df_chol3 = df.query('gender == 2 & smoke == 1 & age_years >= 60 & age_years <= 64 & ap_hi >= 160 & ap_hi < 180 & cholesterol == 3').count()
n_chol3 = df_chol3[(df_chol3.cardio == 1)]                  # Доля больных во второй выборке

ratio = n_chol1 / n_chol3
# Доли больных людей (согласно целевому признаку, cardio)
# в указанных двух подвыборках отличаются в 3 раз")

print(int(round(ratio)))

print(" ======================= Вопрос 6 ============================================")
# Выберите верные утверждения.

#  Вопрос 6, задача 1. Медианный BMI по выборке превышает норму?
#            Ответ: "Да, превышает"

bmi = df['BMI'] = df['weight'] /((df['height']/100)* (df['height']/100))
me_bmi = bmi.median()                                       # медиана нового признака BMI

if me_bmi > 25:
    print("Да,  медианный BMI по выборке превышает норму")
#else:
#    print("Нет, медианный BMI по выборке НЕ ПРЕВЫШАЕТ норму")


# Вопрос 6, задача 2. У женщин в среднем BMI ниже, чем у мужчин?
#           Ответ: "Нет, не ниже"

df_w = df.query('gender == 1')                               # набор данных для женщин
df_m = df.query('gender == 2')                               # набор данных для мужчин

me_w = df_w.BMI.mean()                                       # средний BMI у женщин
me_m = df_m.BMI.mean()                                       # средний BMI у мужчин

if (me_w < me_m):
    print("Да, у женщин в среднем BMI ниже, чем у мужчин")
#else:
#    print("Нет, у женщин в среднем BMI НЕ НИЖЕ, чем у мужчин")


# Вопрос 6, задача 3. У здоровых в среднем BMI выше, чем у больных?
#           Ответ: "Нет, не выше".

df_health = df.query('cardio == 0')                          #выборка здоровых
df_ill = df.query('cardio == 1')                             #выборка больных

bmi_health = df_health.BMI.mean()                            # среднее bmi у здоровых
bmi_ill = df_ill.BMI.mean()                                  # среднее bmi у больных

if (bmi_health > bmi_ill):
    print("Да,  у здоровых в среднем BMI выше, чем у больных")
#else:
    #print("Нет, у здоровых в среднем BMI НЕ ВЫШЕ, чем у больных")


# Вопрос 6, задача 4.В сегменте здоровых и непьющих мужчин в среднем BMI ближе к норме,
# чем в сегменте здоровых и непьющих женщин?\
#           Ответ: "Да, ближе".

df_mhma = df.query('gender == 2 & cardio == 0 & alco == 0')  # выборка здоровых и непьющих мужчин
df_whma = df.query('gender == 1 & cardio == 0 & alco == 0')  # выборка здоровых и непьющих женщин

std_m = df_mhma.BMI.std()                                    # стандартное отклонение у мужчин
std_w = df_whma.BMI.std()                                    # стандартное отклонение у женщин

if (std_m < std_w):
    print("Да,  у здоровых и непьющих мужчин в среднем BMI ближе к норме")
#else:
#    print("Нет, у здоровых и непьющих мужчин в среднем BMI  НЕ БЛИЖЕ к норме")


print(" ======================= Вопрос 7 ============================================")
#Сколько процентов данных (округленно, round) мы выбросили (при указанных ниже фильтрах)?
#1) ap_lo > ap_hi
#2) height < p2.5% or > p97.5%
#3) weight < p2.5% or > p97.5%
# Ответ: отфильтровано 10 процентов данных.

#pd.set_option('precision', 4)                               #для точного учета знаков в перцентилях
all_lines = df.shape[0]                                      #всего строк ДО фильтрации 70000
#print(all_lines)

df = df[df["ap_lo"] <= df["ap_hi"]]                          # отбросим значения ap_lo > ap_hi, т.е.
                                                             # оставим в наборе ap_lo <= ap_hi
#print("Отфильтровано по давлению  \n", len(df_ap))          # осталось 68766 lines

# найдем все перцентили и отбросим перцентильные хвосты
qH02_5 = df['height'].quantile(0.025)                        # 150 см
df = df[df["height"] >= qH02_5]
#print("Осталось quantile(0.025) \n", len(df))               # осталось 67260 lines

qH97_5 = df['height'].quantile(0.975)                        # 180 см
df = df[df["height"] <= qH97_5]
#print("Осталось quantile(0.975) \n", len(df))               # осталось 65859 lines

qW02_5 = df['weight'].quantile(0.025)                        # 52 кг
df = df[df["weight"] >= qW02_5]
#print("Осталось quantile(0.025) \n", len(df))               # осталось 64384 lines

qW97_5 = df['weight'].quantile(0.975)                        # 106 кг
df = df[df["weight"] <= qW97_5]
#print("Осталось quantile(0.975) \n", len(df))               # осталось 62784 lines

rested_lines = len(df)

#Всего отфильтровано 70000-62784=7216 строки. В процентах: 7216 * 100/70000 = 10,31% ~= 10%
proc = (all_lines - rested_lines)*100/all_lines

print(f"Мы выбросили около {round(proc)} % данных ")
